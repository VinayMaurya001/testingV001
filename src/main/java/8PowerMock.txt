Power Mock
	Limitations of Mockito
	PowerMock
	
Limitations of Mockito
	Mockito is one of the most used Mocking framework in Java space.
	But it does come with certain limitations where it cann't mock out the edge cases like
		static methods
		final methods
		constructors
		private methods
		enums
		etc.
		
Why Mockito/EasyMock cann't mock static/final/private methods, constructors, enum etc?
It(Mockito/EasyMock) uses proxy pattern to mockout class/objects.

Mocking Frameworks
	Mockito
	EasyMock
	etc.
		
PowerMock
	PowerMock is also a mocking framwork.
	PowerMock reuses, what is already there in Mocking framework like Mockito, EastMock etc. & extends them.
	So we have flavour of PowerMocks:
		1)PowerMock with Mockito
		2)PowerMock with EasyMock

PowerMock uses the following to achieve what Mockito/EasyMock cann't do:
	Bytecode Manipulation
	Custom CLassloader
	
PowerMock uses similar syntax like 	Mockito/EasyMock:
	Stubbing & Setting Expectations
		when()  thenReturn() etc.
	Verifying
		verify


Example:
@RunWith(PowerMockRunner.class)
@PrepareForTest(IDGenerator.class)
public class UserDAOTest {
	@Test
	public void createShouldReturnAUserId() {
		UserDAO dao = new UserDAO();
		PowerMockito.mockStatic(IDGenerator.class);
		PowerMockito.when(IDGenerator.generateID()).thenReturn(1);

		int result = dao.create(new User());
		Assertions.assertEquals(1, result);
		PowerMockito.verifyStatic(IDGenerator.class);
		// PowerMockito.verifyStatic();
	}
}		

Dependency
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito2</artifactId>
			<version>2.0.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>2.0.4</version>
		</dependency>
		
				



	

